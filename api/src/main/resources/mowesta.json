{
    "swagger" : "2.0",
    "info" : {
      "description" : "The application programming ",
      "version" : "1.0.22-SNAPSHOT",
      "title" : "Mowesta Service",
      "termsOfService" : "https://mowesta.com/terms-of-service",
      "contact" : {
        "name" : "Networked Embedded Systems",
        "url" : "https://www.nes.uni-due.de",
        "email" : "nes-admin@uni-due.de"
      },
      "license" : {
        "name" : "Mowesta License",
        "url" : "https://www.mowesta.com/license"
      }
    },
    "host" : "www.mowesta.com",
    "basePath" : "/api",
    "tags" : [ {
      "name" : "Default"
    }, {
      "name" : "Device"
    }, {
      "name" : "Location"
    }, {
      "name" : "Service"
    }, {
      "name" : "Settings"
    }, {
      "name" : "User"
    }, {
      "name" : "Weather"
    } ],
    "schemes" : [ "https" ],
    "paths" : {
      "/cities" : {
        "get" : {
          "tags" : [ "Default", "Location" ],
          "summary" : "Returns a page of cities.",
          "description" : "",
          "operationId" : "getCities",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "pageOffset",
            "in" : "query",
            "description" : "The offset in terms of elements.",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "description" : "The maximum number of elements on the page.",
            "required" : false,
            "type" : "integer",
            "default" : 20,
            "format" : "int32"
          } ],
          "responses" : {
            "200" : {
              "description" : "City page retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/CityPage",
                "originalRef" : "#/definitions/CityPage"
              },
              "schema" : {
                "$ref" : "#/definitions/CityPage",
                "originalRef" : "#/definitions/CityPage"
              }
            },
            "400" : {
              "description" : "Invalid request parameter."
            }
          }
        }
      },
      "/cities/resolve" : {
        "get" : {
          "tags" : [ "Default", "Location" ],
          "summary" : "Returns a page of cities within a certain area defined by two coordiantes.",
          "description" : "",
          "operationId" : "resolveCities",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "pageOffset",
            "in" : "query",
            "description" : "The offset in terms of elements.",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "description" : "The maximum number of elements on the page.",
            "required" : false,
            "type" : "integer",
            "default" : 20,
            "format" : "int32"
          }, {
            "name" : "longitude1",
            "in" : "query",
            "description" : "The longitude of the first coordinate.",
            "required" : true,
            "type" : "number",
            "format" : "double"
          }, {
            "name" : "latitude1",
            "in" : "query",
            "description" : "The latitude of the first coordinate.",
            "required" : true,
            "type" : "number",
            "format" : "double"
          }, {
            "name" : "longitude2",
            "in" : "query",
            "description" : "The longitude of the second coordinate.",
            "required" : true,
            "type" : "number",
            "format" : "double"
          }, {
            "name" : "latitude2",
            "in" : "query",
            "description" : "The latitude of the second coordinate.",
            "required" : true,
            "type" : "number",
            "format" : "double"
          } ],
          "responses" : {
            "200" : {
              "description" : "The page of cities.",
              "responseSchema" : {
                "$ref" : "#/definitions/CityPage",
                "originalRef" : "#/definitions/CityPage"
              },
              "schema" : {
                "$ref" : "#/definitions/CityPage",
                "originalRef" : "#/definitions/CityPage"
              }
            },
            "400" : {
              "description" : "Invalid request parameter."
            }
          }
        }
      },
      "/cities/search" : {
        "get" : {
          "tags" : [ "Default", "Location" ],
          "summary" : "Returns a page of cities that match the specified search term.",
          "description" : "",
          "operationId" : "searchCities",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "pageOffset",
            "in" : "query",
            "description" : "The offset in terms of elements.",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "description" : "The maximum number of elements on the page.",
            "required" : false,
            "type" : "integer",
            "default" : 20,
            "format" : "int32"
          }, {
            "name" : "language",
            "in" : "query",
            "description" : "The language of the user interface.",
            "required" : true,
            "type" : "string",
            "enum" : [ "de", "en", "es", "fr", "it" ]
          }, {
            "name" : "location",
            "in" : "query",
            "description" : "The optional position of the user specified as longitude,latitude.",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "term",
            "in" : "query",
            "description" : "The search term.",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "The page of cities.",
              "responseSchema" : {
                "$ref" : "#/definitions/CityPage",
                "originalRef" : "#/definitions/CityPage"
              },
              "schema" : {
                "$ref" : "#/definitions/CityPage",
                "originalRef" : "#/definitions/CityPage"
              }
            },
            "400" : {
              "description" : "Invalid request parameter."
            }
          }
        }
      },
      "/cities/{id}" : {
        "get" : {
          "tags" : [ "Default", "Location" ],
          "summary" : "Gets a city with a particular id.",
          "description" : "",
          "operationId" : "getCity",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "The city id.",
            "required" : true,
            "type" : "integer",
            "minimum" : 0,
            "pattern" : "[0-9]+",
            "format" : "int64"
          } ],
          "responses" : {
            "200" : {
              "description" : "City retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/City",
                "originalRef" : "#/definitions/City"
              },
              "schema" : {
                "$ref" : "#/definitions/City",
                "originalRef" : "#/definitions/City"
              }
            },
            "404" : {
              "description" : "The city does not exists."
            }
          }
        }
      },
      "/cities/{id}/boundary" : {
        "get" : {
          "tags" : [ "Default", "Location" ],
          "summary" : "Gets the city boundary for a city with a particular id.",
          "description" : "",
          "operationId" : "getCityBoundary",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "The city id.",
            "required" : true,
            "type" : "integer",
            "minimum" : 0,
            "pattern" : "[0-9]+",
            "format" : "int64"
          } ],
          "responses" : {
            "200" : {
              "description" : "City boundary retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/Geometry",
                "originalRef" : "#/definitions/Geometry"
              },
              "schema" : {
                "$ref" : "#/definitions/Geometry",
                "originalRef" : "#/definitions/Geometry"
              }
            },
            "204" : {
              "description" : "The city boundary are not available."
            },
            "404" : {
              "description" : "The city does not exist."
            }
          }
        }
      },
      "/cities/{id}/condition" : {
        "get" : {
          "tags" : [ "Default", "Weather" ],
          "summary" : "Gets the current weather condition for a city with a particular id.",
          "description" : "",
          "operationId" : "getCityCondition",
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "The city id.",
            "required" : true,
            "type" : "integer",
            "minimum" : 0,
            "pattern" : "[0-9]+",
            "format" : "int64"
          } ],
          "responses" : {
            "200" : {
              "description" : "Weather condition retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/WeatherCondition",
                "originalRef" : "#/definitions/WeatherCondition"
              },
              "schema" : {
                "$ref" : "#/definitions/WeatherCondition",
                "originalRef" : "#/definitions/WeatherCondition"
              }
            },
            "204" : {
              "description" : "Weather condition not available."
            },
            "404" : {
              "description" : "City does not exist."
            }
          }
        }
      },
      "/cities/{id}/forecast" : {
        "get" : {
          "tags" : [ "Default", "Weather" ],
          "summary" : "Gets the weather forecast for a city with a particular id.",
          "description" : "",
          "operationId" : "getCityForecast",
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "The city id.",
            "required" : true,
            "type" : "integer",
            "minimum" : 0,
            "pattern" : "[0-9]+",
            "format" : "int64"
          } ],
          "responses" : {
            "200" : {
              "description" : "Weather forecast retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/WeatherForecast",
                "originalRef" : "#/definitions/WeatherForecast"
              },
              "schema" : {
                "$ref" : "#/definitions/WeatherForecast",
                "originalRef" : "#/definitions/WeatherForecast"
              }
            },
            "204" : {
              "description" : "Weather forecast not available."
            },
            "404" : {
              "description" : "City does not exist."
            }
          }
        }
      },
      "/cities/{id}/station" : {
        "get" : {
          "tags" : [ "Default", "Weather" ],
          "summary" : "Gets the weather station for a city with a particular id.",
          "description" : "",
          "operationId" : "getCityStation",
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "The city id.",
            "required" : true,
            "type" : "integer",
            "minimum" : 0,
            "pattern" : "[0-9]+",
            "format" : "int64"
          } ],
          "responses" : {
            "200" : {
              "description" : "Weather station retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/WeatherStation",
                "originalRef" : "#/definitions/WeatherStation"
              },
              "schema" : {
                "$ref" : "#/definitions/WeatherStation",
                "originalRef" : "#/definitions/WeatherStation"
              }
            },
            "204" : {
              "description" : "Weather station not available."
            },
            "404" : {
              "description" : "City does not exist."
            }
          }
        }
      },
      "/cities/{id}/videos" : {
        "get" : {
          "tags" : [ "Default", "Weather" ],
          "summary" : "Returns the all videos for the city.",
          "description" : "",
          "operationId" : "getCityVideos",
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "The city id.",
            "required" : true,
            "type" : "integer",
            "minimum" : 0,
            "pattern" : "[0-9]+",
            "format" : "int64"
          }, {
            "name" : "pageOffset",
            "in" : "query",
            "description" : "The offset in terms of elements.",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "description" : "The maximum number of elements on the page.",
            "required" : false,
            "type" : "integer",
            "default" : 20,
            "format" : "int32"
          } ],
          "responses" : {
            "200" : {
              "description" : "Weather videos retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/WeatherVideoPage",
                "originalRef" : "#/definitions/WeatherVideoPage"
              },
              "schema" : {
                "$ref" : "#/definitions/WeatherVideoPage",
                "originalRef" : "#/definitions/WeatherVideoPage"
              }
            },
            "204" : {
              "description" : "Weather videos not available."
            },
            "404" : {
              "description" : "City does not exist."
            }
          }
        }
      },
      "/cities/{id}/videos/latest" : {
        "get" : {
          "tags" : [ "Default", "Weather" ],
          "summary" : "Returns the latest videos for the city.",
          "description" : "",
          "operationId" : "getLatestCityVideos",
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "The city id.",
            "required" : true,
            "type" : "integer",
            "minimum" : 0,
            "pattern" : "[0-9]+",
            "format" : "int64"
          } ],
          "responses" : {
            "200" : {
              "description" : "Weather videos retrieved successfully.",
              "responseSchema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/WeatherVideo",
                  "originalRef" : "#/definitions/WeatherVideo"
                }
              },
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/WeatherVideo",
                  "originalRef" : "#/definitions/WeatherVideo"
                }
              }
            },
            "204" : {
              "description" : "Weather videos not available."
            },
            "404" : {
              "description" : "City does not exist."
            }
          }
        }
      },
      "/countries" : {
        "get" : {
          "tags" : [ "Default", "Location" ],
          "summary" : "Returns a page of countries.",
          "description" : "",
          "operationId" : "getCountries",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "pageOffset",
            "in" : "query",
            "description" : "The offset in terms of elements.",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "description" : "The maximum number of elements on the page.",
            "required" : false,
            "type" : "integer",
            "default" : 20,
            "format" : "int32"
          } ],
          "responses" : {
            "200" : {
              "description" : "Country page retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/CountryPage",
                "originalRef" : "#/definitions/CountryPage"
              },
              "schema" : {
                "$ref" : "#/definitions/CountryPage",
                "originalRef" : "#/definitions/CountryPage"
              }
            },
            "400" : {
              "description" : "Invalid request parameter."
            }
          }
        }
      },
      "/countries/{id}" : {
        "get" : {
          "tags" : [ "Default", "Location" ],
          "summary" : "Gets a country with a particular id.",
          "description" : "",
          "operationId" : "getCountry",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "The country id.",
            "required" : true,
            "type" : "integer",
            "minimum" : 0,
            "pattern" : "[0-9]+",
            "format" : "int64"
          } ],
          "responses" : {
            "200" : {
              "description" : "Country retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/Country",
                "originalRef" : "#/definitions/Country"
              },
              "schema" : {
                "$ref" : "#/definitions/Country",
                "originalRef" : "#/definitions/Country"
              }
            },
            "404" : {
              "description" : "The country does not exists."
            }
          }
        }
      },
      "/countries/{id}/boundary" : {
        "get" : {
          "tags" : [ "Default", "Location" ],
          "summary" : "Gets the country boundary for a country with a particular id.",
          "description" : "",
          "operationId" : "getCountryBoundary",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "The country id.",
            "required" : true,
            "type" : "integer",
            "minimum" : 0,
            "pattern" : "[0-9]+",
            "format" : "int64"
          } ],
          "responses" : {
            "200" : {
              "description" : "Country boundary retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/Geometry",
                "originalRef" : "#/definitions/Geometry"
              },
              "schema" : {
                "$ref" : "#/definitions/Geometry",
                "originalRef" : "#/definitions/Geometry"
              }
            },
            "204" : {
              "description" : "The country boundary are not available."
            },
            "404" : {
              "description" : "The country does not exist."
            }
          }
        }
      },
      "/countries/{id}/cities" : {
        "get" : {
          "tags" : [ "Default", "Location" ],
          "summary" : "Gets a page of cities for a particular country ordered by importance.",
          "description" : "",
          "operationId" : "getCountryCities",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "The country id.",
            "required" : true,
            "type" : "integer",
            "minimum" : 0,
            "pattern" : "[0-9]+",
            "format" : "int64"
          }, {
            "name" : "pageOffset",
            "in" : "query",
            "description" : "The offset in terms of elements.",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "description" : "The maximum number of elements on the page.",
            "required" : false,
            "type" : "integer",
            "default" : 20,
            "format" : "int32"
          } ],
          "responses" : {
            "200" : {
              "description" : "Cities retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/CityPage",
                "originalRef" : "#/definitions/CityPage"
              },
              "schema" : {
                "$ref" : "#/definitions/CityPage",
                "originalRef" : "#/definitions/CityPage"
              }
            },
            "404" : {
              "description" : "The country does not exists."
            }
          }
        }
      },
      "/devices" : {
        "get" : {
          "tags" : [ "Default", "Device" ],
          "summary" : "Returns all devices.",
          "description" : "",
          "operationId" : "getDevices",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "pageOffset",
            "in" : "query",
            "description" : "The offset in terms of elements.",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "description" : "The maximum number of elements on the page.",
            "required" : false,
            "type" : "integer",
            "default" : 20,
            "format" : "int32"
          } ],
          "responses" : {
            "200" : {
              "description" : "The request was successful.",
              "responseSchema" : {
                "$ref" : "#/definitions/DevicePage",
                "originalRef" : "#/definitions/DevicePage"
              },
              "schema" : {
                "$ref" : "#/definitions/DevicePage",
                "originalRef" : "#/definitions/DevicePage"
              }
            },
            "400" : {
              "description" : "Invalid request parameter."
            },
            "403" : {
              "description" : "Insufficient privileges for retrieval."
            }
          },
          "security" : [ {
            "admin" : [ ]
          } ]
        },
        "post" : {
          "tags" : [ "Default", "Device" ],
          "summary" : "Creates a new device and returns its handle.",
          "description" : "The response will include the auth token to be stored on the device and supplied as authentication on all subsequent api calls. Note that the auth token can not be requested after creation, so when losing the auth token you may lose access to the device data.",
          "operationId" : "createDevice",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "description" : "Necessary data from to create a device.",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/DeviceInfo",
              "originalRef" : "DeviceInfo"
            }
          } ],
          "responses" : {
            "201" : {
              "description" : "The device was created successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/DeviceHandle",
                "originalRef" : "#/definitions/DeviceHandle"
              },
              "schema" : {
                "$ref" : "#/definitions/DeviceHandle",
                "originalRef" : "#/definitions/DeviceHandle"
              }
            }
          }
        }
      },
      "/devices/current" : {
        "get" : {
          "tags" : [ "Default", "Device" ],
          "summary" : "Returns the current device.",
          "description" : "",
          "operationId" : "getCurrentDevice",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "responses" : {
            "200" : {
              "description" : "The operation was successful.",
              "responseSchema" : {
                "$ref" : "#/definitions/Device",
                "originalRef" : "#/definitions/Device"
              },
              "schema" : {
                "$ref" : "#/definitions/Device",
                "originalRef" : "#/definitions/Device"
              }
            },
            "403" : {
              "description" : "Insufficient privileges for executing this method."
            },
            "404" : {
              "description" : "The device was not found."
            }
          },
          "security" : [ {
            "device" : [ ]
          } ]
        },
        "delete" : {
          "tags" : [ "Default", "Device" ],
          "summary" : "Deletes the current device.",
          "description" : "",
          "operationId" : "deleteCurrentDevice",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "responses" : {
            "200" : {
              "description" : "The device was deleted successfully."
            },
            "403" : {
              "description" : "Insufficient privileges for executing this method."
            },
            "404" : {
              "description" : "The device was not found."
            }
          },
          "security" : [ {
            "device" : [ ]
          } ]
        }
      },
      "/devices/current/measurements" : {
        "get" : {
          "tags" : [ "Default", "Device" ],
          "summary" : "Returns a page of measurements of the current device from a certain time range.",
          "description" : "",
          "operationId" : "getCurrentDeviceMeasurements",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "start",
            "in" : "query",
            "description" : "The start time in Epoch milliseconds.",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "duration",
            "in" : "query",
            "description" : "The duration in milliseconds.",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "pageOffset",
            "in" : "query",
            "description" : "The offset in terms of elements.",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "description" : "The maximum number of elements on the page.",
            "required" : false,
            "type" : "integer",
            "default" : 20,
            "format" : "int32"
          } ],
          "responses" : {
            "200" : {
              "description" : "Measurements retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/MeasurementPage",
                "originalRef" : "#/definitions/MeasurementPage"
              },
              "schema" : {
                "$ref" : "#/definitions/MeasurementPage",
                "originalRef" : "#/definitions/MeasurementPage"
              }
            },
            "403" : {
              "description" : "Insufficient privileges to retrieve the measurements."
            }
          },
          "security" : [ {
            "device" : [ ]
          } ]
        },
        "post" : {
          "tags" : [ "Default", "Device" ],
          "summary" : "Adds a number of measurements for the current device.",
          "description" : "",
          "operationId" : "addCurrentDeviceMeasurements",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "description" : "The new measurements to add.",
            "required" : true,
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Measurement",
                "originalRef" : "Measurement"
              }
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "Measurements added successfully."
            },
            "403" : {
              "description" : "No valid authorization found."
            }
          },
          "security" : [ {
            "device" : [ ]
          } ]
        }
      },
      "/devices/current/measurements/now" : {
        "post" : {
          "tags" : [ "Default", "Device" ],
          "summary" : "Adds a single measurement for the device that has been captured recently.",
          "description" : "",
          "operationId" : "addCurrentDeviceMeasurement",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "description" : "The new measurement to add.",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/Measurement",
              "originalRef" : "Measurement"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "Measurement added successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/Measurement",
                "originalRef" : "#/definitions/Measurement"
              },
              "schema" : {
                "$ref" : "#/definitions/Measurement",
                "originalRef" : "#/definitions/Measurement"
              }
            },
            "403" : {
              "description" : "No valid authorization found."
            }
          },
          "security" : [ {
            "device" : [ ]
          } ]
        }
      },
      "/devices/current/user" : {
        "get" : {
          "tags" : [ "Default", "User" ],
          "summary" : "Returns the user that is associated with a device.",
          "description" : "",
          "operationId" : "getCurrentDeviceUser",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "responses" : {
            "200" : {
              "description" : "User retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/User",
                "originalRef" : "#/definitions/User"
              },
              "schema" : {
                "$ref" : "#/definitions/User",
                "originalRef" : "#/definitions/User"
              }
            },
            "204" : {
              "description" : "Device is not associated with a user."
            },
            "403" : {
              "description" : "No valid authorization found."
            }
          },
          "security" : [ {
            "user" : [ ]
          } ]
        },
        "post" : {
          "tags" : [ "Default", "Device" ],
          "summary" : "Connects a device created without user account with a user account.",
          "description" : "Executing this is operation requires a valid device and a valid user authentication to be transmitted simultaneously. ",
          "operationId" : "setCurrentDeviceUser",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "description" : "The device data.",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/Device",
              "originalRef" : "Device"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "The device has been connected to the user account.",
              "responseSchema" : {
                "$ref" : "#/definitions/Device",
                "originalRef" : "#/definitions/Device"
              },
              "schema" : {
                "$ref" : "#/definitions/Device",
                "originalRef" : "#/definitions/Device"
              }
            },
            "403" : {
              "description" : "The device or user credentials are missing or incorrect."
            },
            "409" : {
              "description" : "The device is already connected to a user account.",
              "responseSchema" : {
                "$ref" : "#/definitions/Device",
                "originalRef" : "#/definitions/Device"
              },
              "schema" : {
                "$ref" : "#/definitions/Device",
                "originalRef" : "#/definitions/Device"
              }
            }
          }
        }
      },
      "/devices/measurements" : {
        "get" : {
          "tags" : [ "Default", "Device" ],
          "summary" : "Returns a page of measurements of all devices within a certain time range.",
          "description" : "",
          "operationId" : "getAllMeasurementsByRange",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "start",
            "in" : "query",
            "description" : "The start time in Epoch milliseconds.",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "duration",
            "in" : "query",
            "description" : "The duration in milliseconds.",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "pageOffset",
            "in" : "query",
            "description" : "The offset in terms of elements.",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "description" : "The maximum number of elements on the page.",
            "required" : false,
            "type" : "integer",
            "default" : 20,
            "format" : "int32"
          } ],
          "responses" : {
            "200" : {
              "description" : "Measurements retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/MeasurementPage",
                "originalRef" : "#/definitions/MeasurementPage"
              },
              "schema" : {
                "$ref" : "#/definitions/MeasurementPage",
                "originalRef" : "#/definitions/MeasurementPage"
              }
            },
            "403" : {
              "description" : "Insufficient privileges to retrieve the measurements."
            }
          },
          "security" : [ {
            "admin" : [ ]
          } ]
        }
      },
      "/devices/{id}" : {
        "get" : {
          "tags" : [ "Default", "Device" ],
          "summary" : "Gets a device.",
          "description" : "",
          "operationId" : "getDevice",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "The device id.",
            "required" : true,
            "type" : "integer",
            "minimum" : 0,
            "pattern" : "[0-9]+",
            "format" : "int64"
          } ],
          "responses" : {
            "200" : {
              "description" : "The device returned successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/Device",
                "originalRef" : "#/definitions/Device"
              },
              "schema" : {
                "$ref" : "#/definitions/Device",
                "originalRef" : "#/definitions/Device"
              }
            },
            "403" : {
              "description" : "Insufficient privileges for executing this method."
            },
            "404" : {
              "description" : "The device does not exists."
            }
          },
          "security" : [ {
            "admin" : [ ]
          }, {
            "user" : [ ]
          } ]
        },
        "put" : {
          "tags" : [ "Default", "Device" ],
          "summary" : "Sets the values of a device.",
          "description" : "",
          "operationId" : "setDevice",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "The device id.",
            "required" : true,
            "type" : "integer",
            "minimum" : 0,
            "pattern" : "[0-9]+",
            "format" : "int64"
          }, {
            "in" : "body",
            "name" : "body",
            "description" : "The device values.",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/Device",
              "originalRef" : "Device"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "The device returned successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/Device",
                "originalRef" : "#/definitions/Device"
              },
              "schema" : {
                "$ref" : "#/definitions/Device",
                "originalRef" : "#/definitions/Device"
              }
            },
            "403" : {
              "description" : "Insufficient privileges for executing this method."
            },
            "404" : {
              "description" : "The device does not exists."
            },
            "409" : {
              "description" : "The device has been updated in parallel."
            }
          },
          "security" : [ {
            "admin" : [ ]
          } ]
        },
        "delete" : {
          "tags" : [ "Default", "Device" ],
          "summary" : "Deletes a device and it's visits.",
          "description" : "",
          "operationId" : "deleteDevice",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "The device id.",
            "required" : true,
            "type" : "integer",
            "minimum" : 0,
            "pattern" : "[0-9]+",
            "format" : "int64"
          } ],
          "responses" : {
            "200" : {
              "description" : "The device was deleted successfully."
            },
            "403" : {
              "description" : "Insufficient privileges for executing this method."
            },
            "404" : {
              "description" : "The device does not exists."
            }
          },
          "security" : [ {
            "user" : [ ]
          }, {
            "admin" : [ ]
          } ]
        }
      },
      "/devices/{id}/measurements" : {
        "get" : {
          "tags" : [ "Default", "Device" ],
          "summary" : "Returns a page of measurements of a specific device from a certain time range.",
          "description" : "",
          "operationId" : "getDeviceMeasurements",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "The device id.",
            "required" : true,
            "type" : "integer",
            "pattern" : "([0-9])+",
            "format" : "int64"
          }, {
            "name" : "start",
            "in" : "query",
            "description" : "The start time in Epoch milliseconds.",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "duration",
            "in" : "query",
            "description" : "The duration in milliseconds.",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "pageOffset",
            "in" : "query",
            "description" : "The offset in terms of elements.",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "description" : "The maximum number of elements on the page.",
            "required" : false,
            "type" : "integer",
            "default" : 20,
            "format" : "int32"
          } ],
          "responses" : {
            "200" : {
              "description" : "Measurements retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/MeasurementPage",
                "originalRef" : "#/definitions/MeasurementPage"
              },
              "schema" : {
                "$ref" : "#/definitions/MeasurementPage",
                "originalRef" : "#/definitions/MeasurementPage"
              }
            },
            "403" : {
              "description" : "Insufficient privileges to retrieve the measurements."
            },
            "404" : {
              "description" : "The measurements were not found."
            }
          },
          "security" : [ {
            "user" : [ ]
          }, {
            "admin" : [ ]
          } ]
        }
      },
      "/forecasts/resolve" : {
        "get" : {
          "tags" : [ "Default", "Weather" ],
          "summary" : "Searches the (closest) weather forecast for a particular location.",
          "description" : "",
          "operationId" : "resolveForecast",
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "longitude",
            "in" : "query",
            "description" : "The longitude.",
            "required" : true,
            "type" : "number",
            "format" : "double"
          }, {
            "name" : "latitude",
            "in" : "query",
            "description" : "The latitude.",
            "required" : true,
            "type" : "number",
            "format" : "double"
          } ],
          "responses" : {
            "200" : {
              "description" : "Weather forecast retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/WeatherForecast",
                "originalRef" : "#/definitions/WeatherForecast"
              },
              "schema" : {
                "$ref" : "#/definitions/WeatherForecast",
                "originalRef" : "#/definitions/WeatherForecast"
              }
            },
            "204" : {
              "description" : "Weather forecast not available."
            }
          }
        }
      },
      "/forecasts/{id}" : {
        "get" : {
          "tags" : [ "Default", "Weather" ],
          "summary" : "Gets the weather forecast with a particular id.",
          "description" : "",
          "operationId" : "getForecast",
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "The forecast id.",
            "required" : true,
            "type" : "integer",
            "minimum" : 0,
            "pattern" : "[0-9]+",
            "format" : "int64"
          } ],
          "responses" : {
            "200" : {
              "description" : "Weather forecast retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/WeatherForecast",
                "originalRef" : "#/definitions/WeatherForecast"
              },
              "schema" : {
                "$ref" : "#/definitions/WeatherForecast",
                "originalRef" : "#/definitions/WeatherForecast"
              }
            },
            "404" : {
              "description" : "Weather forecast does not exist."
            }
          }
        }
      },
      "/locations/search" : {
        "get" : {
          "tags" : [ "Default", "Location" ],
          "summary" : "Returns a page of locations whose name matches the term.",
          "description" : "",
          "operationId" : "searchLocations",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "pageOffset",
            "in" : "query",
            "description" : "The offset in terms of elements.",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "description" : "The maximum number of elements on the page.",
            "required" : false,
            "type" : "integer",
            "default" : 20,
            "format" : "int32"
          }, {
            "name" : "language",
            "in" : "query",
            "description" : "The language of the user interface.",
            "required" : true,
            "type" : "string",
            "enum" : [ "de", "en", "es", "fr", "it" ]
          }, {
            "name" : "location",
            "in" : "query",
            "description" : "The optional position of the user specified as longitude,latitude.",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "term",
            "in" : "query",
            "description" : "The search term.",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "Location hierarchy page retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/LocationHierarchyPage",
                "originalRef" : "#/definitions/LocationHierarchyPage"
              },
              "schema" : {
                "$ref" : "#/definitions/LocationHierarchyPage",
                "originalRef" : "#/definitions/LocationHierarchyPage"
              }
            },
            "400" : {
              "description" : "Invalid request parameter."
            }
          }
        }
      },
      "/log/entities" : {
        "get" : {
          "tags" : [ "Default", "Service" ],
          "summary" : "Returns a list of entity statistics.",
          "description" : "",
          "operationId" : "getEntityStatistics",
          "produces" : [ "application/json", "application/xml" ],
          "responses" : {
            "200" : {
              "description" : "Entity statistics retrieved successfully.",
              "responseSchema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/EntityStatistic",
                  "originalRef" : "#/definitions/EntityStatistic"
                }
              },
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/EntityStatistic",
                  "originalRef" : "#/definitions/EntityStatistic"
                }
              }
            },
            "403" : {
              "description" : "Insufficient privileges for retrieval."
            }
          },
          "security" : [ {
            "admin" : [ ]
          } ]
        }
      },
      "/log/load" : {
        "get" : {
          "tags" : [ "Default", "Service" ],
          "summary" : "Returns the current load statistic.",
          "description" : "",
          "operationId" : "getLoadStatistic",
          "produces" : [ "application/json", "application/xml" ],
          "responses" : {
            "200" : {
              "description" : "Load statistic retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/LoadStatistic",
                "originalRef" : "#/definitions/LoadStatistic"
              },
              "schema" : {
                "$ref" : "#/definitions/LoadStatistic",
                "originalRef" : "#/definitions/LoadStatistic"
              }
            },
            "403" : {
              "description" : "Insufficient privileges for retrieval."
            }
          },
          "security" : [ {
            "admin" : [ ]
          } ]
        }
      },
      "/log/messages" : {
        "get" : {
          "tags" : [ "Default", "Service" ],
          "summary" : "Returns a list of log messages starting from a particular id.",
          "description" : "",
          "operationId" : "getLogMessages",
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "from",
            "in" : "query",
            "description" : "The id of the first message to retrieve.",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "minimum" : 0,
            "format" : "int64"
          } ],
          "responses" : {
            "200" : {
              "description" : "Log messages retrieved successfully.",
              "responseSchema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/LogMessage",
                  "originalRef" : "#/definitions/LogMessage"
                }
              },
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/LogMessage",
                  "originalRef" : "#/definitions/LogMessage"
                }
              }
            },
            "400" : {
              "description" : "Invalid request parameter."
            },
            "403" : {
              "description" : "Insufficient privileges for retrieval."
            }
          },
          "security" : [ {
            "admin" : [ ]
          } ]
        }
      },
      "/log/system" : {
        "get" : {
          "tags" : [ "Default", "Service" ],
          "summary" : "Returns the system statistic.",
          "description" : "",
          "operationId" : "getSystemStatistic",
          "produces" : [ "application/json", "application/xml" ],
          "responses" : {
            "200" : {
              "description" : "System statistic retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/SystemStatistic",
                "originalRef" : "#/definitions/SystemStatistic"
              },
              "schema" : {
                "$ref" : "#/definitions/SystemStatistic",
                "originalRef" : "#/definitions/SystemStatistic"
              }
            },
            "403" : {
              "description" : "Insufficient privileges for retrieval."
            }
          },
          "security" : [ {
            "admin" : [ ]
          } ]
        }
      },
      "/state/{id}/boundary" : {
        "get" : {
          "tags" : [ "Default", "Location" ],
          "summary" : "Deprecated: Gets the state boundary for a state with a particular id.",
          "description" : "",
          "operationId" : "getStateBoundaryDeprecated",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "The state id.",
            "required" : true,
            "type" : "integer",
            "minimum" : 0,
            "pattern" : "[0-9]+",
            "format" : "int64"
          } ],
          "responses" : {
            "200" : {
              "description" : "State boundary retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/Geometry",
                "originalRef" : "#/definitions/Geometry"
              },
              "schema" : {
                "$ref" : "#/definitions/Geometry",
                "originalRef" : "#/definitions/Geometry"
              }
            },
            "204" : {
              "description" : "The state boundary are not available."
            },
            "404" : {
              "description" : "The state does not exist."
            }
          },
          "deprecated" : true
        }
      },
      "/states" : {
        "get" : {
          "tags" : [ "Default", "Location" ],
          "summary" : "Returns a page of states.",
          "description" : "",
          "operationId" : "getStates",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "pageOffset",
            "in" : "query",
            "description" : "The offset in terms of elements.",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "description" : "The maximum number of elements on the page.",
            "required" : false,
            "type" : "integer",
            "default" : 20,
            "format" : "int32"
          } ],
          "responses" : {
            "200" : {
              "description" : "State page retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/StatePage",
                "originalRef" : "#/definitions/StatePage"
              },
              "schema" : {
                "$ref" : "#/definitions/StatePage",
                "originalRef" : "#/definitions/StatePage"
              }
            },
            "400" : {
              "description" : "Invalid request parameter."
            }
          }
        }
      },
      "/states/{id}" : {
        "get" : {
          "tags" : [ "Default", "Location" ],
          "summary" : "Gets a state with a particular id.",
          "description" : "",
          "operationId" : "getState",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "The state id.",
            "required" : true,
            "type" : "integer",
            "minimum" : 0,
            "pattern" : "[0-9]+",
            "format" : "int64"
          } ],
          "responses" : {
            "200" : {
              "description" : "State retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/State",
                "originalRef" : "#/definitions/State"
              },
              "schema" : {
                "$ref" : "#/definitions/State",
                "originalRef" : "#/definitions/State"
              }
            },
            "404" : {
              "description" : "The state does not exists."
            }
          }
        }
      },
      "/states/{id}/boundary" : {
        "get" : {
          "tags" : [ "Default", "Location" ],
          "summary" : "Gets the state boundary for a state with a particular id.",
          "description" : "",
          "operationId" : "getStateBoundary",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "The state id.",
            "required" : true,
            "type" : "integer",
            "minimum" : 0,
            "pattern" : "[0-9]+",
            "format" : "int64"
          } ],
          "responses" : {
            "200" : {
              "description" : "State boundary retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/Geometry",
                "originalRef" : "#/definitions/Geometry"
              },
              "schema" : {
                "$ref" : "#/definitions/Geometry",
                "originalRef" : "#/definitions/Geometry"
              }
            },
            "204" : {
              "description" : "The state boundary are not available."
            },
            "404" : {
              "description" : "The state does not exist."
            }
          }
        }
      },
      "/states/{id}/cities" : {
        "get" : {
          "tags" : [ "Default", "Location" ],
          "summary" : "Gets a page of cities for a particular state ordered by importance.",
          "description" : "",
          "operationId" : "getStateCities",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "The state id.",
            "required" : true,
            "type" : "integer",
            "minimum" : 0,
            "pattern" : "[0-9]+",
            "format" : "int64"
          }, {
            "name" : "pageOffset",
            "in" : "query",
            "description" : "The offset in terms of elements.",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "description" : "The maximum number of elements on the page.",
            "required" : false,
            "type" : "integer",
            "default" : 20,
            "format" : "int32"
          } ],
          "responses" : {
            "200" : {
              "description" : "Cities retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/CityPage",
                "originalRef" : "#/definitions/CityPage"
              },
              "schema" : {
                "$ref" : "#/definitions/CityPage",
                "originalRef" : "#/definitions/CityPage"
              }
            },
            "404" : {
              "description" : "The state does not exists."
            }
          }
        }
      },
      "/stations" : {
        "get" : {
          "tags" : [ "Default", "Weather" ],
          "summary" : "Returns a page of weather stations, possibly filtered by name.",
          "description" : "",
          "operationId" : "getStations",
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "term",
            "in" : "query",
            "description" : "An optional search term to filter the result by name.",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "pageOffset",
            "in" : "query",
            "description" : "The offset in terms of elements.",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "description" : "The maximum number of elements on the page.",
            "required" : false,
            "type" : "integer",
            "default" : 20,
            "format" : "int32"
          } ],
          "responses" : {
            "200" : {
              "description" : "Weather station page retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/WeatherStationPage",
                "originalRef" : "#/definitions/WeatherStationPage"
              },
              "schema" : {
                "$ref" : "#/definitions/WeatherStationPage",
                "originalRef" : "#/definitions/WeatherStationPage"
              }
            },
            "400" : {
              "description" : "Invalid request parameter."
            }
          }
        }
      },
      "/stations/resolve" : {
        "get" : {
          "tags" : [ "Default", "Weather" ],
          "summary" : "Searches the (closest) weather station for a particular location.",
          "description" : "",
          "operationId" : "resolveStation",
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "longitude",
            "in" : "query",
            "description" : "The longitude.",
            "required" : true,
            "type" : "number",
            "format" : "double"
          }, {
            "name" : "latitude",
            "in" : "query",
            "description" : "The latitude.",
            "required" : true,
            "type" : "number",
            "format" : "double"
          } ],
          "responses" : {
            "200" : {
              "description" : "Weather station retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/WeatherStation",
                "originalRef" : "#/definitions/WeatherStation"
              },
              "schema" : {
                "$ref" : "#/definitions/WeatherStation",
                "originalRef" : "#/definitions/WeatherStation"
              }
            },
            "204" : {
              "description" : "Weather station not available."
            }
          }
        }
      },
      "/stations/{id}" : {
        "get" : {
          "tags" : [ "Default", "Weather" ],
          "summary" : "Gets a weather station with a particular id.",
          "description" : "",
          "operationId" : "getStation",
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "The station id.",
            "required" : true,
            "type" : "integer",
            "minimum" : 0,
            "pattern" : "[0-9]+",
            "format" : "int64"
          } ],
          "responses" : {
            "200" : {
              "description" : "Weather station retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/WeatherStation",
                "originalRef" : "#/definitions/WeatherStation"
              },
              "schema" : {
                "$ref" : "#/definitions/WeatherStation",
                "originalRef" : "#/definitions/WeatherStation"
              }
            },
            "404" : {
              "description" : "Weather station does not exist."
            }
          }
        }
      },
      "/stations/{id}/reports" : {
        "get" : {
          "tags" : [ "Default", "Weather" ],
          "summary" : "Returns a page of weather reports of a particular staton in a certain time range.",
          "description" : "",
          "operationId" : "getStationReports",
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "The station id.",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "start",
            "in" : "query",
            "description" : "The start time in Epoch milliseconds.",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "duration",
            "in" : "query",
            "description" : "The duration in milliseconds.",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "pageOffset",
            "in" : "query",
            "description" : "The offset in terms of elements.",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "description" : "The maximum number of elements on the page.",
            "required" : false,
            "type" : "integer",
            "default" : 20,
            "format" : "int32"
          } ],
          "responses" : {
            "200" : {
              "description" : "Weather reports retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/WeatherReportPage",
                "originalRef" : "#/definitions/WeatherReportPage"
              },
              "schema" : {
                "$ref" : "#/definitions/WeatherReportPage",
                "originalRef" : "#/definitions/WeatherReportPage"
              }
            },
            "404" : {
              "description" : "Weather station not found."
            }
          }
        }
      },
      "/stations/{id}/reports/latest" : {
        "get" : {
          "tags" : [ "Default", "Weather" ],
          "summary" : "Returns the latest weather report of a particular station.",
          "description" : "",
          "operationId" : "getLatestStationReport",
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "The station id.",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          } ],
          "responses" : {
            "200" : {
              "description" : "Weather report retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/WeatherReport",
                "originalRef" : "#/definitions/WeatherReport"
              },
              "schema" : {
                "$ref" : "#/definitions/WeatherReport",
                "originalRef" : "#/definitions/WeatherReport"
              }
            },
            "204" : {
              "description" : "No weather report for station available."
            },
            "404" : {
              "description" : "Weather station not found."
            }
          }
        }
      },
      "/users" : {
        "get" : {
          "tags" : [ "Default", "User" ],
          "summary" : "Returns a list of users.",
          "description" : "",
          "operationId" : "getUsers",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "pageOffset",
            "in" : "query",
            "description" : "The offset in terms of elements.",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "description" : "The maximum number of elements on the page.",
            "required" : false,
            "type" : "integer",
            "default" : 20,
            "format" : "int32"
          } ],
          "responses" : {
            "200" : {
              "description" : "User page retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/UserPage",
                "originalRef" : "#/definitions/UserPage"
              },
              "schema" : {
                "$ref" : "#/definitions/UserPage",
                "originalRef" : "#/definitions/UserPage"
              }
            },
            "400" : {
              "description" : "Invalid request parameter."
            },
            "403" : {
              "description" : "Insufficient privileges for retrieval."
            }
          },
          "security" : [ {
            "admin" : [ ]
          } ]
        },
        "post" : {
          "tags" : [ "Default", "User" ],
          "summary" : "Adds a user account with the specified roles and emails.",
          "description" : "",
          "operationId" : "addUser",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "description" : "The data for the new user.",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/User",
              "originalRef" : "User"
            }
          } ],
          "responses" : {
            "201" : {
              "description" : "User added successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/User",
                "originalRef" : "#/definitions/User"
              },
              "schema" : {
                "$ref" : "#/definitions/User",
                "originalRef" : "#/definitions/User"
              }
            },
            "400" : {
              "description" : "Invalid user."
            },
            "403" : {
              "description" : "Insufficient privileges to add the user."
            },
            "409" : {
              "description" : "User login exists already."
            }
          },
          "security" : [ {
            "admin" : [ ]
          } ]
        }
      },
      "/users/current" : {
        "get" : {
          "tags" : [ "Default", "User" ],
          "summary" : "Returns the user currently authorized.",
          "description" : "",
          "operationId" : "getCurrentUser",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "responses" : {
            "200" : {
              "description" : "User retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/User",
                "originalRef" : "#/definitions/User"
              },
              "schema" : {
                "$ref" : "#/definitions/User",
                "originalRef" : "#/definitions/User"
              }
            },
            "403" : {
              "description" : "No valid authorization found."
            }
          },
          "security" : [ {
            "user" : [ ]
          } ]
        },
        "put" : {
          "tags" : [ "Default", "User" ],
          "summary" : "Updates the currently authorized user.",
          "description" : "",
          "operationId" : "setCurrentUser",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "description" : "The new user values to set.",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/User",
              "originalRef" : "User"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "User updated successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/User",
                "originalRef" : "#/definitions/User"
              },
              "schema" : {
                "$ref" : "#/definitions/User",
                "originalRef" : "#/definitions/User"
              }
            },
            "400" : {
              "description" : "Invalid user."
            },
            "403" : {
              "description" : "No valid authorization found."
            },
            "409" : {
              "description" : "User modified in parallel.",
              "responseSchema" : {
                "$ref" : "#/definitions/User",
                "originalRef" : "#/definitions/User"
              },
              "schema" : {
                "$ref" : "#/definitions/User",
                "originalRef" : "#/definitions/User"
              }
            }
          },
          "security" : [ {
            "user" : [ ]
          } ]
        }
      },
      "/users/current/devices" : {
        "get" : {
          "tags" : [ "Default", "Device" ],
          "summary" : "Returns the list of devices for the current user.",
          "description" : "",
          "operationId" : "getCurrentUserDevices",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "pageOffset",
            "in" : "query",
            "description" : "The offset in terms of elements.",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "description" : "The maximum number of elements on the page.",
            "required" : false,
            "type" : "integer",
            "default" : 20,
            "format" : "int32"
          } ],
          "responses" : {
            "200" : {
              "description" : "The list of devices of the current user",
              "responseSchema" : {
                "$ref" : "#/definitions/DevicePage",
                "originalRef" : "#/definitions/DevicePage"
              },
              "schema" : {
                "$ref" : "#/definitions/DevicePage",
                "originalRef" : "#/definitions/DevicePage"
              }
            },
            "403" : {
              "description" : "Insufficient privileges for executing this method."
            },
            "404" : {
              "description" : "The device was not found."
            }
          },
          "security" : [ {
            "user" : [ ]
          } ]
        }
      },
      "/users/current/locations" : {
        "get" : {
          "tags" : [ "Default", "Settings" ],
          "summary" : "Returns the favorite locations of the current user.",
          "description" : "",
          "operationId" : "getCurrentUserLocations",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "responses" : {
            "200" : {
              "description" : "The request was successful.",
              "responseSchema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/LocationHierarchy",
                  "originalRef" : "#/definitions/LocationHierarchy"
                }
              },
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/LocationHierarchy",
                  "originalRef" : "#/definitions/LocationHierarchy"
                }
              }
            },
            "403" : {
              "description" : "Insufficient privileges to access the user's locations."
            }
          },
          "security" : [ {
            "user" : [ ]
          } ]
        }
      },
      "/users/current/password" : {
        "put" : {
          "tags" : [ "Default", "User" ],
          "summary" : "Sets the password of the currently authorized user.",
          "description" : "",
          "operationId" : "setCurrentPassword",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "description" : "The new password to set.",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/UserPassword",
              "originalRef" : "UserPassword"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "Password updated successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/User",
                "originalRef" : "#/definitions/User"
              },
              "schema" : {
                "$ref" : "#/definitions/User",
                "originalRef" : "#/definitions/User"
              }
            },
            "400" : {
              "description" : "Invalid password."
            },
            "403" : {
              "description" : "No valid authorization found."
            }
          },
          "security" : [ {
            "user" : [ ]
          } ]
        }
      },
      "/users/current/settings" : {
        "get" : {
          "tags" : [ "Default", "Settings" ],
          "summary" : "Returns the setting of the current user.",
          "description" : "",
          "operationId" : "getCurrentUserSettings",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "responses" : {
            "200" : {
              "description" : "The request was successful.",
              "responseSchema" : {
                "$ref" : "#/definitions/Settings",
                "originalRef" : "#/definitions/Settings"
              },
              "schema" : {
                "$ref" : "#/definitions/Settings",
                "originalRef" : "#/definitions/Settings"
              }
            },
            "403" : {
              "description" : "Insufficient privileges to access the user's settings."
            }
          },
          "security" : [ {
            "user" : [ ]
          } ]
        },
        "put" : {
          "tags" : [ "Default", "Settings" ],
          "summary" : "Updates the settings of the current user.",
          "description" : "",
          "operationId" : "setCurrentUserSettings",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "description" : "The settings to set.",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/Settings",
              "originalRef" : "Settings"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "User settings updated succesfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/Settings",
                "originalRef" : "#/definitions/Settings"
              },
              "schema" : {
                "$ref" : "#/definitions/Settings",
                "originalRef" : "#/definitions/Settings"
              }
            },
            "400" : {
              "description" : "Invalid request parameters."
            },
            "403" : {
              "description" : "Insufficient privileges to access the user's settings."
            },
            "409" : {
              "description" : "Conflict due to parallel update.",
              "responseSchema" : {
                "$ref" : "#/definitions/Settings",
                "originalRef" : "#/definitions/Settings"
              },
              "schema" : {
                "$ref" : "#/definitions/Settings",
                "originalRef" : "#/definitions/Settings"
              }
            }
          },
          "security" : [ {
            "user" : [ ]
          } ]
        }
      },
      "/users/password/{token}" : {
        "put" : {
          "tags" : [ "Default", "User" ],
          "summary" : "Sets the password of a user account using a token received via email.",
          "description" : "",
          "operationId" : "resetUserPassword",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "token",
            "in" : "path",
            "description" : "The secret token received via email.",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "description" : "The new user password.",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/UserPassword",
              "originalRef" : "UserPassword"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "Password updated successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/User",
                "originalRef" : "#/definitions/User"
              },
              "schema" : {
                "$ref" : "#/definitions/User",
                "originalRef" : "#/definitions/User"
              }
            },
            "400" : {
              "description" : "Invalid token or password."
            },
            "403" : {
              "description" : "Password modification not allowed."
            }
          }
        }
      },
      "/users/register" : {
        "post" : {
          "tags" : [ "Default", "User" ],
          "summary" : "Registers a new user and sends an email account verification.",
          "description" : "",
          "operationId" : "registerUser",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "description" : "The data of the new user.",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/UserRegistration",
              "originalRef" : "UserRegistration"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "User registered successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/User",
                "originalRef" : "#/definitions/User"
              },
              "schema" : {
                "$ref" : "#/definitions/User",
                "originalRef" : "#/definitions/User"
              }
            },
            "400" : {
              "description" : "Invalid user registration."
            },
            "409" : {
              "description" : "User login already registered."
            }
          }
        }
      },
      "/users/reset" : {
        "post" : {
          "tags" : [ "Default", "User" ],
          "summary" : "Sends a password reset email to the correspondence email account of a user.",
          "description" : "",
          "operationId" : "resetUser",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "login",
            "in" : "query",
            "description" : "The login of the user to reset.",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "204" : {
              "description" : "Reset email sent successfully."
            },
            "400" : {
              "description" : "User email has not been verified."
            },
            "404" : {
              "description" : "Login does not exist."
            }
          }
        }
      },
      "/users/search" : {
        "get" : {
          "tags" : [ "Default", "User" ],
          "summary" : "Returns a list of users whose login name or name contains the term.",
          "description" : "",
          "operationId" : "searchUsers",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "pageOffset",
            "in" : "query",
            "description" : "The offset in terms of elements.",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "description" : "The maximum number of elements on the page.",
            "required" : false,
            "type" : "integer",
            "default" : 20,
            "format" : "int32"
          }, {
            "name" : "term",
            "in" : "query",
            "description" : "The search term.",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "User page retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/UserPage",
                "originalRef" : "#/definitions/UserPage"
              },
              "schema" : {
                "$ref" : "#/definitions/UserPage",
                "originalRef" : "#/definitions/UserPage"
              }
            },
            "400" : {
              "description" : "Invalid request parameter."
            },
            "403" : {
              "description" : "Insufficient privileges for retrieval."
            }
          },
          "security" : [ {
            "admin" : [ ]
          } ]
        }
      },
      "/users/verify/{token}" : {
        "put" : {
          "tags" : [ "Default", "User" ],
          "summary" : "Verifies an email address using a token received via email.",
          "description" : "",
          "operationId" : "verifyUserEmail",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "token",
            "in" : "path",
            "description" : "The secret token received via email.",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "204" : {
              "description" : "Email verified successfully."
            },
            "400" : {
              "description" : "Invalid token."
            },
            "403" : {
              "description" : "Email verification is not valid."
            }
          }
        }
      },
      "/users/{id}" : {
        "get" : {
          "tags" : [ "Default", "User" ],
          "summary" : "Returns the user account with the specified id.",
          "description" : "",
          "operationId" : "getUser",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the user to retrieve.",
            "required" : true,
            "type" : "integer",
            "pattern" : "([0-9])+",
            "format" : "int64"
          } ],
          "responses" : {
            "200" : {
              "description" : "User retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/User",
                "originalRef" : "#/definitions/User"
              },
              "schema" : {
                "$ref" : "#/definitions/User",
                "originalRef" : "#/definitions/User"
              }
            },
            "403" : {
              "description" : "Insufficient privileges to retrieve the user."
            }
          },
          "security" : [ {
            "admin" : [ ]
          } ]
        },
        "put" : {
          "tags" : [ "Default", "User" ],
          "summary" : "Updates the values of a particular user account.",
          "description" : "",
          "operationId" : "setUser",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the user to set.",
            "required" : true,
            "type" : "integer",
            "pattern" : "([0-9])+",
            "format" : "int64"
          }, {
            "in" : "body",
            "name" : "body",
            "description" : "The new user data to set.",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/User",
              "originalRef" : "User"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "User updated successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/User",
                "originalRef" : "#/definitions/User"
              },
              "schema" : {
                "$ref" : "#/definitions/User",
                "originalRef" : "#/definitions/User"
              }
            },
            "400" : {
              "description" : "Invalid user."
            },
            "403" : {
              "description" : "Insufficient privileges to retrieve the user."
            },
            "409" : {
              "description" : "User modified in parallel.",
              "responseSchema" : {
                "$ref" : "#/definitions/User",
                "originalRef" : "#/definitions/User"
              },
              "schema" : {
                "$ref" : "#/definitions/User",
                "originalRef" : "#/definitions/User"
              }
            }
          },
          "security" : [ {
            "admin" : [ ]
          } ]
        }
      },
      "/users/{id}/password" : {
        "put" : {
          "tags" : [ "Default", "User" ],
          "summary" : "Sets the password of a user.",
          "description" : "",
          "operationId" : "setUserPassword",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the user to change.",
            "required" : true,
            "type" : "integer",
            "pattern" : "([0-9])+",
            "format" : "int64"
          }, {
            "in" : "body",
            "name" : "body",
            "description" : "The new password.",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/UserPassword",
              "originalRef" : "UserPassword"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "Password updated successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/User",
                "originalRef" : "#/definitions/User"
              },
              "schema" : {
                "$ref" : "#/definitions/User",
                "originalRef" : "#/definitions/User"
              }
            },
            "400" : {
              "description" : "Invalid password."
            },
            "403" : {
              "description" : "Password modification not allowed."
            }
          },
          "security" : [ {
            "admin" : [ ]
          } ]
        }
      },
      "/versions/build" : {
        "get" : {
          "tags" : [ "Default", "Service" ],
          "summary" : "Returns the build version.",
          "description" : "",
          "operationId" : "getBuildVersion",
          "produces" : [ "application/json", "application/xml" ],
          "responses" : {
            "200" : {
              "description" : "Build version retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/BuildVersion",
                "originalRef" : "#/definitions/BuildVersion"
              },
              "schema" : {
                "$ref" : "#/definitions/BuildVersion",
                "originalRef" : "#/definitions/BuildVersion"
              }
            }
          }
        }
      },
      "/videos" : {
        "get" : {
          "tags" : [ "Default", "Weather" ],
          "summary" : "Returns a page of weather videos.",
          "description" : "",
          "operationId" : "getVideos",
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "pageOffset",
            "in" : "query",
            "description" : "The offset in terms of elements.",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "description" : "The maximum number of elements on the page.",
            "required" : false,
            "type" : "integer",
            "default" : 20,
            "format" : "int32"
          } ],
          "responses" : {
            "200" : {
              "description" : "Weather video page retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/WeatherVideoPage",
                "originalRef" : "#/definitions/WeatherVideoPage"
              },
              "schema" : {
                "$ref" : "#/definitions/WeatherVideoPage",
                "originalRef" : "#/definitions/WeatherVideoPage"
              }
            },
            "400" : {
              "description" : "Invalid request parameter."
            }
          }
        }
      },
      "/videos/latest" : {
        "get" : {
          "tags" : [ "Default", "Weather" ],
          "summary" : "Returns the latest of weather videos.",
          "description" : "",
          "operationId" : "getLatestVideos",
          "produces" : [ "application/json", "application/xml" ],
          "responses" : {
            "200" : {
              "description" : "Weather video list retrieved successfully.",
              "responseSchema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/WeatherVideo",
                  "originalRef" : "#/definitions/WeatherVideo"
                }
              },
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/WeatherVideo",
                  "originalRef" : "#/definitions/WeatherVideo"
                }
              }
            }
          }
        }
      },
      "/videos/resolve" : {
        "get" : {
          "tags" : [ "Default", "Weather" ],
          "summary" : "Returns a page of weather videos relevant for a location.",
          "description" : "",
          "operationId" : "resolveVideos",
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "name" : "longitude",
            "in" : "query",
            "description" : "The longitude.",
            "required" : true,
            "type" : "number",
            "format" : "double"
          }, {
            "name" : "latitude",
            "in" : "query",
            "description" : "The latitude.",
            "required" : true,
            "type" : "number",
            "format" : "double"
          }, {
            "name" : "pageOffset",
            "in" : "query",
            "description" : "The offset in terms of elements.",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "description" : "The maximum number of elements on the page.",
            "required" : false,
            "type" : "integer",
            "default" : 20,
            "format" : "int32"
          } ],
          "responses" : {
            "200" : {
              "description" : "Weather video page retrieved successfully.",
              "responseSchema" : {
                "$ref" : "#/definitions/WeatherVideoPage",
                "originalRef" : "#/definitions/WeatherVideoPage"
              },
              "schema" : {
                "$ref" : "#/definitions/WeatherVideoPage",
                "originalRef" : "#/definitions/WeatherVideoPage"
              }
            },
            "400" : {
              "description" : "Invalid request parameter."
            }
          }
        }
      }
    },
    "securityDefinitions" : {
      "admin" : {
        "description" : "Operations requiring admin privileges.",
        "type" : "basic"
      },
      "device" : {
        "description" : "Operations requiring device privileges.",
        "type" : "apiKey",
        "name" : "Authorization",
        "in" : "header"
      },
      "user" : {
        "description" : "Operations requiring a valid user.",
        "type" : "basic"
      }
    },
    "definitions" : {
      "BuildVersion" : {
        "type" : "object",
        "required" : [ "build", "creator", "time", "version" ],
        "properties" : {
          "time" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The build time in Epoch milliseconds."
          },
          "build" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The build number."
          },
          "creator" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The creator of the build."
          },
          "version" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The version of the build."
          }
        },
        "description" : "Represents version information about the running build."
      },
      "City" : {
        "type" : "object",
        "required" : [ "capital", "coordinate", "country", "names", "timezone", "type" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The unique identifier of the data."
          },
          "creationTime" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The time stamp when the data was created."
          },
          "modificationTime" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The time stamp when the data was last modified."
          },
          "deleted" : {
            "type" : "boolean",
            "xml" : {
              "attribute" : true
            },
            "description" : "A flag to indicate whether the data was deleted."
          },
          "coordinate" : {
            "description" : "The coordinate of the location.",
            "$ref" : "#/definitions/Coordinate",
            "originalRef" : "Coordinate"
          },
          "timezone" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The timezone of the city."
          },
          "capital" : {
            "type" : "boolean",
            "xml" : {
              "attribute" : true
            },
            "description" : "A flag to indicate whether the city is a capital."
          },
          "population" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The population of the city."
          },
          "wikipedia" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The optional wikipedia entry of the city."
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The type of the city.",
            "enum" : [ "CITY", "TOWN", "VILLAGE", "SUBURB" ]
          },
          "country" : {
            "description" : "The country of the city.",
            "$ref" : "#/definitions/Country",
            "originalRef" : "Country"
          },
          "state" : {
            "description" : "The state of the city.",
            "$ref" : "#/definitions/State",
            "originalRef" : "State"
          },
          "names" : {
            "type" : "object",
            "xml" : {
              "wrapped" : true
            },
            "description" : "The names of the location by language code.",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        },
        "description" : "Represents a city with all details."
      },
      "CityPage" : {
        "type" : "object",
        "required" : [ "elements", "offset", "size", "total" ],
        "properties" : {
          "size" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The maximum number of elements on the page."
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The page offset (0-based) in number of elements."
          },
          "total" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The total number of elements available."
          },
          "elements" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "description" : "The elements of the page.",
            "items" : {
              "xml" : {
                "name" : "element"
              },
              "$ref" : "#/definitions/City",
              "originalRef" : "City"
            }
          }
        },
        "description" : "Represents a page of cities."
      },
      "Coordinate" : {
        "type" : "object",
        "required" : [ "latitude", "longitude" ],
        "properties" : {
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "xml" : {
              "attribute" : true
            },
            "description" : "The latitude of the coordinate."
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "xml" : {
              "attribute" : true
            },
            "description" : "The longitude of the coordinate."
          }
        },
        "description" : "Represents a wgs84 coordinate."
      },
      "Country" : {
        "type" : "object",
        "required" : [ "coordinate", "names" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The unique identifier of the data."
          },
          "creationTime" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The time stamp when the data was created."
          },
          "modificationTime" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The time stamp when the data was last modified."
          },
          "deleted" : {
            "type" : "boolean",
            "xml" : {
              "attribute" : true
            },
            "description" : "A flag to indicate whether the data was deleted."
          },
          "coordinate" : {
            "description" : "The coordinate of the location.",
            "$ref" : "#/definitions/Coordinate",
            "originalRef" : "Coordinate"
          },
          "names" : {
            "type" : "object",
            "xml" : {
              "wrapped" : true
            },
            "description" : "The names of the location by language code.",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        },
        "description" : "Represents a country with all details."
      },
      "CountryPage" : {
        "type" : "object",
        "required" : [ "elements", "offset", "size", "total" ],
        "properties" : {
          "size" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The maximum number of elements on the page."
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The page offset (0-based) in number of elements."
          },
          "total" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The total number of elements available."
          },
          "elements" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "description" : "The elements of the page.",
            "items" : {
              "xml" : {
                "name" : "element"
              },
              "$ref" : "#/definitions/Country",
              "originalRef" : "Country"
            }
          }
        },
        "description" : "Represents a page of countries."
      },
      "Crs" : {
        "type" : "object",
        "required" : [ "properties", "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "name", "link" ]
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "number"
            }
          }
        }
      },
      "Device" : {
        "type" : "object",
        "required" : [ "device", "manufacturer", "model", "os" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The unique identifier of the data."
          },
          "creationTime" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The time stamp when the data was created."
          },
          "modificationTime" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The time stamp when the data was last modified."
          },
          "deleted" : {
            "type" : "boolean",
            "xml" : {
              "attribute" : true
            },
            "description" : "A flag to indicate whether the data was deleted."
          },
          "user" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The id of the owning user or null, if there is none."
          },
          "os" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The operating system.",
            "enum" : [ "ANDROID", "IOS", "ARDUINO" ]
          },
          "manufacturer" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The manufacturer name, see android.os.Build.MANUFACTURER."
          },
          "device" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The device name, see android.os.Build.DEVICE."
          },
          "model" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The model name, see android.os.Build.MODEL."
          }
        },
        "description" : "Represents a device."
      },
      "DeviceHandle" : {
        "type" : "object",
        "required" : [ "device", "manufacturer", "model", "os", "token" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The unique identifier of the data."
          },
          "creationTime" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The time stamp when the data was created."
          },
          "modificationTime" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The time stamp when the data was last modified."
          },
          "deleted" : {
            "type" : "boolean",
            "xml" : {
              "attribute" : true
            },
            "description" : "A flag to indicate whether the data was deleted."
          },
          "user" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The id of the owning user or null, if there is none."
          },
          "os" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The operating system.",
            "enum" : [ "ANDROID", "IOS", "ARDUINO" ]
          },
          "manufacturer" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The manufacturer name, see android.os.Build.MANUFACTURER."
          },
          "device" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The device name, see android.os.Build.DEVICE."
          },
          "model" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The model name, see android.os.Build.MODEL."
          },
          "token" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The secret token used for authenticating the device."
          }
        },
        "description" : "Represents a device with a secret token."
      },
      "DeviceInfo" : {
        "type" : "object",
        "required" : [ "device", "manufacturer", "model", "os" ],
        "properties" : {
          "os" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The operating system.",
            "enum" : [ "ANDROID", "IOS", "ARDUINO" ]
          },
          "manufacturer" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The manufacturer name, see android.os.Build.MANUFACTURER."
          },
          "device" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The device name, see android.os.Build.DEVICE."
          },
          "model" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The model name, see android.os.Build.MODEL."
          }
        },
        "description" : "Represents information about a device."
      },
      "DevicePage" : {
        "type" : "object",
        "required" : [ "elements", "offset", "size", "total" ],
        "properties" : {
          "size" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The maximum number of elements on the page."
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The page offset (0-based) in number of elements."
          },
          "total" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The total number of elements available."
          },
          "elements" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "description" : "The elements of the page.",
            "items" : {
              "xml" : {
                "name" : "element"
              },
              "$ref" : "#/definitions/Device",
              "originalRef" : "Device"
            }
          }
        },
        "description" : "Represents a page of devices."
      },
      "Email" : {
        "type" : "object",
        "required" : [ "address", "correspondence", "verified" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The unique identifier of the data."
          },
          "creationTime" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The time stamp when the data was created."
          },
          "modificationTime" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The time stamp when the data was last modified."
          },
          "deleted" : {
            "type" : "boolean",
            "xml" : {
              "attribute" : true
            },
            "description" : "A flag to indicate whether the data was deleted."
          },
          "address" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The email address."
          },
          "correspondence" : {
            "type" : "boolean",
            "xml" : {
              "attribute" : true
            },
            "description" : "A flag to mark the email address as primary email."
          },
          "verified" : {
            "type" : "boolean",
            "xml" : {
              "attribute" : true
            },
            "description" : "A flag to mark the email address as verified."
          }
        },
        "description" : "Represents a user."
      },
      "EntityStatistic" : {
        "type" : "object",
        "required" : [ "deleted", "name", "total" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The name of the entity."
          },
          "total" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The total number of stored entities."
          },
          "deleted" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The number of deleted entities."
          }
        },
        "description" : "Represents statistics about peristent entities."
      },
      "Geometry" : {
        "type" : "object",
        "required" : [ "bbox", "coordinates", "crs" ],
        "properties" : {
          "crs" : {
            "$ref" : "#/definitions/Crs",
            "originalRef" : "Crs"
          },
          "bbox" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "coordinates" : {
            "type" : "array",
            "items" : {
              "type" : "number"
            }
          }
        }
      },
      "LoadStatistic" : {
        "type" : "object",
        "required" : [ "cpuLoad", "gcCount", "gcDuration", "maxHeapSize", "maxNonHeapSize", "uptime", "usedHeapSize", "usedNonHeapSize" ],
        "properties" : {
          "cpuLoad" : {
            "type" : "number",
            "format" : "double",
            "xml" : {
              "attribute" : true
            },
            "description" : "The average cpu load over the last minute."
          },
          "uptime" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The uptime of the jvm in milliseconds."
          },
          "gcCount" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The total number of garbage collector executions."
          },
          "gcDuration" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The total time for garbage collection in milliseconds."
          },
          "maxHeapSize" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The maximum heap size available in bytes."
          },
          "usedHeapSize" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The used heap size available in bytes."
          },
          "maxNonHeapSize" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The maximum non heap size available in bytes."
          },
          "usedNonHeapSize" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The used non heap size available in bytes."
          }
        },
        "description" : "Represents statistics about the system usage."
      },
      "LocationHierarchy" : {
        "type" : "object",
        "required" : [ "coordinate", "names", "type" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The unique identifier of the data."
          },
          "creationTime" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The time stamp when the data was created."
          },
          "modificationTime" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The time stamp when the data was last modified."
          },
          "deleted" : {
            "type" : "boolean",
            "xml" : {
              "attribute" : true
            },
            "description" : "A flag to indicate whether the data was deleted."
          },
          "coordinate" : {
            "description" : "The coordinate of the location.",
            "$ref" : "#/definitions/Coordinate",
            "originalRef" : "Coordinate"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The type of the location.",
            "enum" : [ "COUNTRY", "STATE", "CITY" ]
          },
          "parent" : {
            "description" : "The parent of the location (country for states, country or state for cities, null for countries).",
            "$ref" : "#/definitions/LocationHierarchy",
            "originalRef" : "LocationHierarchy"
          },
          "names" : {
            "type" : "object",
            "xml" : {
              "wrapped" : true
            },
            "description" : "The names of the location by language code.",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        },
        "description" : "Represents a hierarchy of locations."
      },
      "LocationHierarchyPage" : {
        "type" : "object",
        "required" : [ "elements", "offset", "size", "total" ],
        "properties" : {
          "size" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The maximum number of elements on the page."
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The page offset (0-based) in number of elements."
          },
          "total" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The total number of elements available."
          },
          "elements" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "description" : "The elements of the page.",
            "items" : {
              "xml" : {
                "name" : "element"
              },
              "$ref" : "#/definitions/LocationHierarchy",
              "originalRef" : "LocationHierarchy"
            }
          }
        },
        "description" : "Represents a page of locations with their hierarchical relationship."
      },
      "LocationReference" : {
        "type" : "object",
        "required" : [ "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The location type.",
            "enum" : [ "COUNTRY", "STATE", "CITY" ]
          },
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The location id."
          }
        },
        "description" : "Represents a reference to a location."
      },
      "LogMessage" : {
        "type" : "object",
        "required" : [ "className", "id", "level", "loggerName", "methodName", "thread", "time" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "An auto-generated sequential id."
          },
          "time" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The creation time in Epoch milliseconds."
          },
          "thread" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The id of the thread."
          },
          "level" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The message severity."
          },
          "loggerName" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The name of the logger."
          },
          "className" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The name of the class."
          },
          "methodName" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The name of the method."
          },
          "message" : {
            "type" : "string",
            "description" : "The actual (optional) message."
          },
          "trace" : {
            "type" : "string",
            "description" : "An optional stack trace."
          }
        },
        "description" : "Represents a log message."
      },
      "Measurement" : {
        "type" : "object",
        "required" : [ "device", "time", "version" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The unique identifier of the data."
          },
          "creationTime" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The time stamp when the data was created."
          },
          "modificationTime" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The time stamp when the data was last modified."
          },
          "deleted" : {
            "type" : "boolean",
            "xml" : {
              "attribute" : true
            },
            "description" : "A flag to indicate whether the data was deleted."
          },
          "coordinate" : {
            "description" : "The coordinate of the measurement (may be null, if GPS is not available).",
            "$ref" : "#/definitions/Coordinate",
            "originalRef" : "Coordinate"
          },
          "time" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The timestamp of the measurement in Epoch milliseconds."
          },
          "device" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The device id of the measurement."
          },
          "version" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The app version (version code on Android or build code on IOS)."
          },
          "temperature" : {
            "type" : "number",
            "format" : "double",
            "xml" : {
              "attribute" : true
            },
            "description" : "The calculated air temperature (estimated by the service) in centigrade, may be null."
          },
          "pressure" : {
            "type" : "number",
            "format" : "double",
            "xml" : {
              "attribute" : true
            },
            "description" : "The calculated air pressure (estimated by the service) in hPA, may be null."
          },
          "humidity" : {
            "type" : "number",
            "format" : "double",
            "xml" : {
              "attribute" : true
            },
            "description" : "The calculated relative humidity (estimated by the service) in percent, may be null."
          },
          "rating" : {
            "type" : "number",
            "format" : "double",
            "xml" : {
              "attribute" : true
            },
            "description" : "The calculated measurement rating (estimated by the service) from 0 (low quality) to 1 (high quality), may be null."
          },
          "data" : {
            "type" : "object",
            "xml" : {
              "wrapped" : true
            },
            "description" : "The raw data captured by the device.",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        },
        "description" : "Represents a measurement of a device at a particular point in time."
      },
      "MeasurementPage" : {
        "type" : "object",
        "required" : [ "elements", "offset", "size", "total" ],
        "properties" : {
          "size" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The maximum number of elements on the page."
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The page offset (0-based) in number of elements."
          },
          "total" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The total number of elements available."
          },
          "elements" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "description" : "The elements of the page.",
            "items" : {
              "xml" : {
                "name" : "element"
              },
              "$ref" : "#/definitions/Measurement",
              "originalRef" : "Measurement"
            }
          }
        },
        "description" : "Represents a page of measurements."
      },
      "Settings" : {
        "type" : "object",
        "required" : [ "locations" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The unique identifier of the data."
          },
          "creationTime" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The time stamp when the data was created."
          },
          "modificationTime" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The time stamp when the data was last modified."
          },
          "deleted" : {
            "type" : "boolean",
            "xml" : {
              "attribute" : true
            },
            "description" : "A flag to indicate whether the data was deleted."
          },
          "locations" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "xml" : {
                "name" : "location"
              },
              "$ref" : "#/definitions/LocationReference",
              "originalRef" : "LocationReference"
            }
          }
        },
        "description" : "Represents the user's settings."
      },
      "State" : {
        "type" : "object",
        "required" : [ "coordinate", "country", "names", "timezone" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The unique identifier of the data."
          },
          "creationTime" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The time stamp when the data was created."
          },
          "modificationTime" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The time stamp when the data was last modified."
          },
          "deleted" : {
            "type" : "boolean",
            "xml" : {
              "attribute" : true
            },
            "description" : "A flag to indicate whether the data was deleted."
          },
          "coordinate" : {
            "description" : "The coordinate of the location.",
            "$ref" : "#/definitions/Coordinate",
            "originalRef" : "Coordinate"
          },
          "timezone" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The timezone of the state."
          },
          "population" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The population of the state."
          },
          "wikipedia" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The optional wikipedia entry of the state."
          },
          "country" : {
            "description" : "The country of the state.",
            "$ref" : "#/definitions/Country",
            "originalRef" : "Country"
          },
          "names" : {
            "type" : "object",
            "xml" : {
              "wrapped" : true
            },
            "description" : "The names of the location by language code.",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        },
        "description" : "Represents a state with all details."
      },
      "StatePage" : {
        "type" : "object",
        "required" : [ "elements", "offset", "size", "total" ],
        "properties" : {
          "size" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The maximum number of elements on the page."
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The page offset (0-based) in number of elements."
          },
          "total" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The total number of elements available."
          },
          "elements" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "description" : "The elements of the page.",
            "items" : {
              "xml" : {
                "name" : "element"
              },
              "$ref" : "#/definitions/State",
              "originalRef" : "State"
            }
          }
        },
        "description" : "Represents a page of states."
      },
      "SystemStatistic" : {
        "type" : "object",
        "required" : [ "osArchitecture", "osName", "osVersion", "processors", "vmName", "vmSpecification", "vmVendor", "vmVersion" ],
        "properties" : {
          "osArchitecture" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The architecture of the operating system."
          },
          "osName" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : " The name of the operating system."
          },
          "osVersion" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "A version string of the operating system."
          },
          "vmName" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The name of the virtual machine."
          },
          "vmSpecification" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The name of the virtual machine specification."
          },
          "vmVendor" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The name of the virtual machine vendor."
          },
          "vmVersion" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "A version string for the virtual machine."
          },
          "processors" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The number of available processors."
          }
        },
        "description" : "Represents information about the system."
      },
      "User" : {
        "type" : "object",
        "required" : [ "emails", "login", "name", "roles", "suspended" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The unique identifier of the data."
          },
          "creationTime" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The time stamp when the data was created."
          },
          "modificationTime" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The time stamp when the data was last modified."
          },
          "deleted" : {
            "type" : "boolean",
            "xml" : {
              "attribute" : true
            },
            "description" : "A flag to indicate whether the data was deleted."
          },
          "login" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The (globally unique) login of the user.",
            "pattern" : "(\\p{L}|[0-9]){5,32}"
          },
          "name" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The human name of the user.",
            "pattern" : "(\\p{L}| ){0,64}"
          },
          "suspended" : {
            "type" : "boolean",
            "xml" : {
              "attribute" : true
            },
            "description" : "A flag to indicate that user account is suspended."
          },
          "roles" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "role"
              }
            }
          },
          "emails" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "xml" : {
                "name" : "email"
              },
              "$ref" : "#/definitions/Email",
              "originalRef" : "Email"
            }
          }
        },
        "description" : "Represents a user."
      },
      "UserPage" : {
        "type" : "object",
        "required" : [ "elements", "offset", "size", "total" ],
        "properties" : {
          "size" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The maximum number of elements on the page."
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The page offset (0-based) in number of elements."
          },
          "total" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The total number of elements available."
          },
          "elements" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "description" : "The elements of the page.",
            "items" : {
              "xml" : {
                "name" : "element"
              },
              "$ref" : "#/definitions/User",
              "originalRef" : "User"
            }
          }
        },
        "description" : "Represents a page of users."
      },
      "UserPassword" : {
        "type" : "object",
        "required" : [ "password" ],
        "properties" : {
          "password" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The new password.",
            "minLength" : 6,
            "maxLength" : 2147483647
          }
        },
        "description" : "Represents a user password."
      },
      "UserRegistration" : {
        "type" : "object",
        "required" : [ "email", "login", "name", "password" ],
        "properties" : {
          "password" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The new password.",
            "minLength" : 6,
            "maxLength" : 2147483647
          },
          "login" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The requested login name.",
            "pattern" : "(\\p{L}|[0-9]){5,32}"
          },
          "name" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The human name.",
            "pattern" : "(\\p{L}| ){0,64}"
          },
          "email" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The email address.",
            "pattern" : ".+@.+\\..+"
          }
        },
        "description" : "Represents a user registration."
      },
      "WeatherCondition" : {
        "type" : "object",
        "required" : [ "cloudCoverage", "cloudDepth", "duration", "hour", "humidity", "precipitation", "pressure", "snowDepth", "source", "temperature", "time", "type", "windDirection", "windSpeed" ],
        "properties" : {
          "source" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The source of the condition.",
            "enum" : [ "ICON_GLOBAL", "ICON_EUROPE", "COSMO_EUROPE", "WEATHER_STATION" ]
          },
          "time" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The time when the condition arrises in Epoch milliseconds."
          },
          "hour" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The hour as an offset from the computation time."
          },
          "duration" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The duration of the condition in hours."
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The weather interpretation type describing the condition.",
            "enum" : [ "UNKNOWN", "CLEAR_SKY", "MAINLY_CLEAR", "PARTLY_CLOUDY", "CLOUDY", "FOG", "FOG_DEPOSITING_RIME", "SLIGHT_DRIZZLE", "MODERATE_DRIZZLE", "HEAVY_DRIZZLE", "DRIZZLE_FREEZING_SLIGHT", "DRIZZLE_FREEZING_MODERATE_HEAVY", "SLIGHT_RAIN_NOT_FREEZING", "MODERATE_RAIN_NOT_FREEZING", "HEAVY_RAIN_NOT_FREEZING", "RAIN_FREEZING_SLIGHT", "RAIN_FREEZING_MODERATE_HEAVY", "SLIGHT_FALL_OF_SNOWFLAKES", "MODERATE_FALL_OF_SNOWFLAKES", "HEAVY_FALL_OF_SNOWFLAKES", "SNOW_GRAINS", "RAIN_SHOWER_SLIGHT", "RAIN_SHOWER_MODERATE_HEAVY", "RAIN_SHOWER_VIOLENT", "SNOW_SHOWER_SLIGHT", "SNOW_SHOWER_MODERATE_HEAVY", "THUNDERSTORM_SLIGHT_MODERATE", "THUNDERSTORM_HAIL_HEAVY" ]
          },
          "temperature" : {
            "type" : "number",
            "format" : "double",
            "xml" : {
              "attribute" : true
            },
            "description" : "The temperature at two meters above the ground in degree centigrade."
          },
          "windDirection" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The wind direction at ten meters above the ground.",
            "enum" : [ "UNKNOWN", "NORTH", "NORTH_EAST", "EAST", "SOUTH_EAST", "SOUTH", "SOUTH_WEST", "WEST", "NORTH_WEST" ]
          },
          "windSpeed" : {
            "type" : "number",
            "format" : "double",
            "xml" : {
              "attribute" : true
            },
            "description" : "The wind speed at ten meters above the ground in meters per second."
          },
          "cloudCoverage" : {
            "type" : "number",
            "format" : "double",
            "xml" : {
              "attribute" : true
            },
            "description" : "The cloud coverage in percent from 0 (no clouds) to 1 (totally clouded)."
          },
          "cloudDepth" : {
            "type" : "number",
            "format" : "double",
            "xml" : {
              "attribute" : true
            },
            "description" : "The cloud depth in percent."
          },
          "pressure" : {
            "type" : "number",
            "format" : "double",
            "xml" : {
              "attribute" : true
            },
            "description" : "The air pressure at the surface height in hPa."
          },
          "precipitation" : {
            "type" : "number",
            "format" : "double",
            "xml" : {
              "attribute" : true
            },
            "description" : "The total precipitation in kg per square meter per hour during the duration."
          },
          "snowDepth" : {
            "type" : "number",
            "format" : "double",
            "xml" : {
              "attribute" : true
            },
            "description" : "The show depth in meters."
          },
          "humidity" : {
            "type" : "number",
            "format" : "double",
            "xml" : {
              "attribute" : true
            },
            "description" : "The relative humidity in percent at 2m above the surface."
          }
        },
        "description" : "Represents the weather condition at a particular point in time."
      },
      "WeatherForecast" : {
        "type" : "object",
        "required" : [ "conditions", "coordinate", "plantCoverage", "soilType", "source", "surfaceHeight" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The unique identifier of the data."
          },
          "creationTime" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The time stamp when the data was created."
          },
          "modificationTime" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The time stamp when the data was last modified."
          },
          "deleted" : {
            "type" : "boolean",
            "xml" : {
              "attribute" : true
            },
            "description" : "A flag to indicate whether the data was deleted."
          },
          "coordinate" : {
            "description" : "The coordinate that determines the location.",
            "$ref" : "#/definitions/Coordinate",
            "originalRef" : "Coordinate"
          },
          "source" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The source of the forecast.",
            "enum" : [ "ICON_GLOBAL", "ICON_EUROPE", "COSMO_EUROPE", "WEATHER_STATION" ]
          },
          "surfaceHeight" : {
            "type" : "number",
            "format" : "double",
            "xml" : {
              "attribute" : true
            },
            "description" : "The surface height at the location (in meters above sea level)."
          },
          "plantCoverage" : {
            "type" : "number",
            "format" : "double",
            "xml" : {
              "attribute" : true
            },
            "description" : "The plant coverage at the location (in percent)."
          },
          "soilType" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The soil type at the location.",
            "enum" : [ "ICE", "ROCK", "SAND", "SANDYLOAM", "LOAM", "CLAYLOAM", "CLAY", "PEAT", "SEA_WATER" ]
          },
          "conditions" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "description" : "The weather conditions constituting the forecast.",
            "items" : {
              "xml" : {
                "name" : "condition"
              },
              "$ref" : "#/definitions/WeatherCondition",
              "originalRef" : "WeatherCondition"
            }
          }
        },
        "description" : "Represents a weather forecast for a location."
      },
      "WeatherReport" : {
        "type" : "object",
        "required" : [ "humidity", "time" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The unique identifier of the data."
          },
          "creationTime" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The time stamp when the data was created."
          },
          "modificationTime" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The time stamp when the data was last modified."
          },
          "deleted" : {
            "type" : "boolean",
            "xml" : {
              "attribute" : true
            },
            "description" : "A flag to indicate whether the data was deleted."
          },
          "station" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The id of the station."
          },
          "time" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The measurement time in Epoch milliseconds."
          },
          "temperature" : {
            "type" : "number",
            "format" : "double",
            "xml" : {
              "attribute" : true
            },
            "description" : "The temperature at two meters above the ground in degree centigrade."
          },
          "pressure" : {
            "type" : "number",
            "format" : "double",
            "xml" : {
              "attribute" : true
            },
            "description" : "The air pressure at the station's altitude in hPa."
          },
          "humidity" : {
            "type" : "number",
            "format" : "double",
            "xml" : {
              "attribute" : true
            },
            "description" : "The relative humidity measured at two meters above the ground."
          }
        },
        "description" : "Represents a weather report of a weather station."
      },
      "WeatherReportPage" : {
        "type" : "object",
        "required" : [ "elements", "offset", "size", "total" ],
        "properties" : {
          "size" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The maximum number of elements on the page."
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The page offset (0-based) in number of elements."
          },
          "total" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The total number of elements available."
          },
          "elements" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "description" : "The elements of the page.",
            "items" : {
              "xml" : {
                "name" : "element"
              },
              "$ref" : "#/definitions/WeatherReport",
              "originalRef" : "WeatherReport"
            }
          }
        },
        "description" : "Represents a page of weather reports."
      },
      "WeatherStation" : {
        "type" : "object",
        "required" : [ "altitude", "coordinate", "name", "operator" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The unique identifier of the data."
          },
          "creationTime" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The time stamp when the data was created."
          },
          "modificationTime" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The time stamp when the data was last modified."
          },
          "deleted" : {
            "type" : "boolean",
            "xml" : {
              "attribute" : true
            },
            "description" : "A flag to indicate whether the data was deleted."
          },
          "name" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The name of the station."
          },
          "coordinate" : {
            "description" : "The coordinate that determines the location.",
            "$ref" : "#/definitions/Coordinate",
            "originalRef" : "Coordinate"
          },
          "altitude" : {
            "type" : "number",
            "format" : "double",
            "xml" : {
              "attribute" : true
            },
            "description" : "The altitude of the station (in meters above sea level)."
          },
          "operator" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The operator of the station.",
            "enum" : [ "DWD" ]
          },
          "externalId" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "An external id used by the operator."
          }
        },
        "description" : "Represents a weather station."
      },
      "WeatherStationPage" : {
        "type" : "object",
        "required" : [ "elements", "offset", "size", "total" ],
        "properties" : {
          "size" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The maximum number of elements on the page."
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The page offset (0-based) in number of elements."
          },
          "total" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The total number of elements available."
          },
          "elements" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "description" : "The elements of the page.",
            "items" : {
              "xml" : {
                "name" : "element"
              },
              "$ref" : "#/definitions/WeatherStation",
              "originalRef" : "WeatherStation"
            }
          }
        },
        "description" : "Represents a page of weather stations."
      },
      "WeatherVideo" : {
        "type" : "object",
        "required" : [ "duration", "fph", "fps", "height", "northEast", "preview", "scale", "source", "southWest", "start", "time", "type", "url", "width" ],
        "properties" : {
          "southWest" : {
            "description" : "The south west coordinate representing the bottom left corner of the video.",
            "$ref" : "#/definitions/Coordinate",
            "originalRef" : "Coordinate"
          },
          "northEast" : {
            "description" : "The north east coordinate representing the top right corner of the video.",
            "$ref" : "#/definitions/Coordinate",
            "originalRef" : "Coordinate"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The type of weather data contained in the video.",
            "enum" : [ "CLOUD", "PRECIPITATION", "PRESSURE", "TEMPERATURE", "WIND" ]
          },
          "source" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The type of weather data contained in the video.",
            "enum" : [ "ICON_GLOBAL", "ICON_EUROPE", "COSMO_EUROPE", "WEATHER_STATION" ]
          },
          "time" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "attribute" : true
            },
            "description" : "The time of the prediction in Epoch milliseconds."
          },
          "start" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The start hour of the forecast."
          },
          "duration" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : " The total duration of the forecast in hours."
          },
          "fph" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The number of frames per forecast hour."
          },
          "fps" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The number of frames per second of video time."
          },
          "width" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The width of the video in pixels."
          },
          "height" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The height of the video in pixels."
          },
          "url" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The url to download the video."
          },
          "preview" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The url of a preview image."
          },
          "scale" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "description" : "The url of a scale image."
          }
        },
        "description" : "Represents a weather video."
      },
      "WeatherVideoPage" : {
        "type" : "object",
        "required" : [ "elements", "offset", "size", "total" ],
        "properties" : {
          "size" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The maximum number of elements on the page."
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The page offset (0-based) in number of elements."
          },
          "total" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            },
            "description" : "The total number of elements available."
          },
          "elements" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "description" : "The elements of the page.",
            "items" : {
              "xml" : {
                "name" : "element"
              },
              "$ref" : "#/definitions/WeatherVideo",
              "originalRef" : "WeatherVideo"
            }
          }
        },
        "description" : "Represents a page of weather videos."
      }
    }
  }